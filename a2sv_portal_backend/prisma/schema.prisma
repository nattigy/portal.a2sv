// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  // output = "../node_modules/.prisma/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updateAt  DateTime @updatedAt

  email    String
  password String

  Groups        UsersOnGroup[]
  ProblemStatus ProblemStatus[]
}

model Region {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  region_name String
  Group       Group[]
}

model Group {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  region     Region         @relation(fields: [region_id], references: [id])
  region_id  Int
  group_name String
  group_size Int
  members    UsersOnGroup[]
  subgroups  Group[]        @relation("subgroups")
  parent     Group?         @relation("subgroups", fields: [parentId], references: [id])
  parentId   Int?           @map("groupId")
  status     String
}

model UsersOnGroup {
  group      Group    @relation(fields: [groupId], references: [id])
  groupId    Int
  user       User     @relation(fields: [userId], references: [id])
  userId     Int
  assignedAt DateTime @default(now())
  assignedBy String

  @@id([groupId, userId])
}

model Topic {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  topic_name String
}

model Problem {
  id            Int             @id @default(autoincrement())
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
  problem_title String
  platform      String
  link          String
  difficulty    String
  type          String
  ProblemStatus ProblemStatus[]
}

model ProblemStatus {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user    User @relation(fields: [user_id], references: [id])
  user_id Int

  problem    Problem @relation(fields: [problem_id], references: [id])
  problem_id Int

  status String
  github_link String
  number_of_tries Int
  time_taken Int
  date DateTime
  type String
  solution_code String
}
